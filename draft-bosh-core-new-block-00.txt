



CORE                                                        M. Boucadair
Internet-Draft                                                    Orange
Intended status: Standards Track                              J. Shallow
Expires: October 12, 2020                                 April 10, 2020


New Constrained Application Protocol (CoAP) Block-Wise Transfer Options
                      draft-bosh-core-new-block-00

Abstract

   This document specifies new Constrained Application Protocol (CoAP)
   Block-Wiset transfer options that are meant to accommodate scenarios
   not initially covered by RFC 7959.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on October 12, 2020.

Copyright Notice

   Copyright (c) 2020 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.





Boucadair & Shallow     Expires October 12, 2020                [Page 1]

Internet-Draft       New Block-Wise Transfer Options          April 2020


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Block-Wise Transfer Options: Overview . . . . . . . . . .   2
     1.2.  Some Complications: The DOTS Example  . . . . . . . . . .   2
     1.3.  New Block-Wise Transfer Options . . . . . . . . . . . . .   3
   2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   4
   3.  The Block3 and Block4 Options . . . . . . . . . . . . . . . .   4
     3.1.  Usage of Block3 Option  . . . . . . . . . . . . . . . . .   5
     3.2.  Usage of Block4 Option  . . . . . . . . . . . . . . . . .   5
     3.3.  Combined Usage of Block3 and Block4 Options . . . . . . .   5
   4.  Examples  . . . . . . . . . . . . . . . . . . . . . . . . . .   5
   5.  Caching Considerations  . . . . . . . . . . . . . . . . . . .   5
   6.  HTTP-Mapping Considerations . . . . . . . . . . . . . . . . .   5
   7.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   5
     7.1.  CoAP Option Numbers . . . . . . . . . . . . . . . . . . .   5
   8.  Security Considerations . . . . . . . . . . . . . . . . . . .   6
   9.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .   6
   10. References  . . . . . . . . . . . . . . . . . . . . . . . . .   6
     10.1.  Normative References . . . . . . . . . . . . . . . . . .   6
     10.2.  Informative References . . . . . . . . . . . . . . . . .   7
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .   7

1.  Introduction

1.1.  Block-Wise Transfer Options: Overview

1.2.  Some Complications: The DOTS Example

   <<<<provide the example DOTS case ++++ Pasting the initail text from
   Jon. We need to elaborte further with the examples that you shared on
   the list>>>

   <<<list>>>

   o  (1) The use of nonblock2 option with a "relax" of the behavior at
      the server to send the fragments with the same token and without
      waiting for GETs.

   o  (2) The use of a shim application as you suggested, which requires
      an update on the server side but also on how clients on how to
      fill the gaps (use of PUT/FETCH).

   o  (3) A DOTS specific approach to build its own chunks and signal
      blocks as part of the CBOR.  These blocks are handled as atomic
      notifications.  If a block is missing, the client can use
      GET+Query to retrieve the gap.  We don't require any modification
      at the base CoAP specs.  The issue with this one is to decide what



Boucadair & Shallow     Expires October 12, 2020                [Page 2]

Internet-Draft       New Block-Wise Transfer Options          April 2020


      data to put in the blocks to avoid that when a block is passed to
      other layers, the overheads won't lead to fragmentation.

   ====

   These status responses are sent back using CoAP NON-Confirmable
   packets - in other words the DOTS client does not have to acknowledge
   receipt of the packet which works in an environment where there is
   heavy packet loss in the same direction as the status packet - the
   DOTS server is not waiting on acknowledgement of the previous status
   packet before sending out the next one (which too may get dropped).

   For the status data that is larger than an IP packet, this can
   currently be handled in two ways:

   1.  Let IP fragmentation be used by sending large data that is
       fragmented across several IP packets.

   2.  Make use of the CoAP BLOCK2 option (RFC9759) to create CoAP
       fragmentation.

   The disadvantage of (1) is that the receiving CoAP library has to
   have a large enough receive data buffer size to handle both the
   encrypted and then plaintext data.  The libcoap library has the
   default receive buffer sized for that of an IP packet that is not
   fragmented.  This buffer can be made bigger, but how big?  What if
   the DOTS client is a constrained device with RAM etc.  There is also
   a challenge of managing missing IP fragmented packets which is
   primarily done by the network stack.

   The disadvantage of (2) is that BLOCK2 is a synchronous transmission
   where the DOTS client receives a block of data and then has to
   request the next block of data.  With a lossy network, if the client
   does not see a block of data then this status data transmission will
   stall and not recover leaving the DOTS server with outstanding data
   that cannot be transmitted and hence the need for garbage collection
   of failed transmissions.  Furthermore with (2), RFC9759 recommends
   use of CONfirmable responses to handle potential packet loss - which
   does not work with a flooded pipe DDoS situation.

1.3.  New Block-Wise Transfer Options

   TBC.

   Only the deviation from Block1 and Block2 options will be specified.






Boucadair & Shallow     Expires October 12, 2020                [Page 3]

Internet-Draft       New Block-Wise Transfer Options          April 2020


2.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119][RFC8174] when, and only when, they appear in all
   capitals, as shown here.

   Readers should be familiar with the terms and concepts defined in
   [RFC7252].

   The terms "payload" and "body" are defined in [RFC7959].  The term
   "payload" is thus used for the actual content of a single CoAP
   message (i.e., a single block being transferred), while the term
   "body" is used for the entire resource representation that is being
   transferred in a block-wise fashion.

3.  The Block3 and Block4 Options

   The properties of Block3 ad Block4 options are shown in Table 1.  The
   formatting of this table follows the one used in Table 4 of [RFC7252]
   (Section 5.10).  The C, U, N, and R columns indicate the properties
   Critical, Unsafe, NoCacheKey, and Repeatable defined in Section 5.4
   of [RFC7252].  Since NoCacheKey only has a meaning for options that
   are Safe-to-Forward, the N column is filled with a dash for Block3 ad
   Block4 options.

    +--------+---+---+---+---+-----------+--------+--------+---------+
    | Number | C | U | N | R | Name      | Format | Length | Default |
    +--------+---+---+---+---+-----------+--------+--------+---------+
    |  TBA1  | x | x | - |   | Block3    | uint   |  0-3   |   None  |
    |  TBA2  | x | x | - |   | Block4    | uint   |  0-3   |   None  |
    +--------+---+---+---+---+-----------+--------+--------+---------+

               Table 1: CoAP Block3 ad Block4 Option Properties

   The Block3 Option pertains to the request payload, and the Block4
   Option pertains to the response payload.  The Content-Format Option
   applies to the body, not to the payload.

   Both Block3 and Block4 options are not repeatable.  Therefore, any
   request carrying multiple Block3 (or Block4) options MUST be handled
   following the procedure specified in Section 5.4.5 of [RFC7252].

   The structure of Block3 ad Block4 options MUST follow the structure
   defined in Secion 2.2 of [RFC7959].

   The Block3 ad Block4 options are not safe to forward.



Boucadair & Shallow     Expires October 12, 2020                [Page 4]

Internet-Draft       New Block-Wise Transfer Options          April 2020


3.1.  Usage of Block3 Option

3.2.  Usage of Block4 Option

3.3.  Combined Usage of Block3 and Block4 Options

4.  Examples

5.  Caching Considerations

   The considerations discussed in Section 2.10 of [RFC7959] apply for
   the Block3 ad Block4 options .

   This specification does not require a proxy to obtain the complete
   representation before it serves parts of it to.

   A proxy that supports Block3 ad Block4 options must be prepared to
   receive a GET request indicating one or more missing blocks The
   server can serve from its cache blocks that are available in its
   cache.  If one more requested blocks are not available locally, the
   proxy MUST update the GET request to list only missing blocks, and
   then forward the request to the next hop.

6.  HTTP-Mapping Considerations

   This section focuses on the HTTP mappings specific to the CoAP
   extension specified in this document.  As a reminder, the basic
   normative requirements on HTTP/CoAP mappings are defined in
   Section 10 of [RFC7252].  The implementation guidelines for HTTP/CoAP
   mappings are elaborated in [RFC8075].

   The rules defined in Section 5 of [RFC7959] are to be followed.

7.  IANA Considerations

      Editorial Note: Please update TBA1/TBA2 statements within the
      document with the assigned codes.

7.1.  CoAP Option Numbers

   IANA is requested to add the following entry to the "CoAP Option
   Numbers" sub-registry available at https://www.iana.org/assignments/
   core-parameters/core-parameters.xhtml#option-numbers:








Boucadair & Shallow     Expires October 12, 2020                [Page 5]

Internet-Draft       New Block-Wise Transfer Options          April 2020


               +--------+------------------+-----------+
               | Number | Name             | Reference |
               +--------+------------------+-----------+
               |  TBA1  | Block3           | [RFCXXXX] |
               |  TBA2  | Block4           | [RFCXXXX] |
               +--------+------------------+-----------+

               Table 3: CoAP Block3 ad Block4 Option Numbers

   This document suggests XX and XX as a values to be assigned for the
   new option numbers.

8.  Security Considerations

   Security considerations discussed in Section 9 of [RFC7959] should be
   taken into account.

9.  Acknowledgements

   Thanks to Achim Kraus, Christian Amsuess, Carsten Bormann, Jim Schaad
   for the comments on the mailing list.

10.  References

10.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC7230]  Fielding, R., Ed. and J. Reschke, Ed., "Hypertext Transfer
              Protocol (HTTP/1.1): Message Syntax and Routing",
              RFC 7230, DOI 10.17487/RFC7230, June 2014,
              <https://www.rfc-editor.org/info/rfc7230>.

   [RFC7252]  Shelby, Z., Hartke, K., and C. Bormann, "The Constrained
              Application Protocol (CoAP)", RFC 7252,
              DOI 10.17487/RFC7252, June 2014,
              <https://www.rfc-editor.org/info/rfc7252>.

   [RFC7641]  Hartke, K., "Observing Resources in the Constrained
              Application Protocol (CoAP)", RFC 7641,
              DOI 10.17487/RFC7641, September 2015,
              <https://www.rfc-editor.org/info/rfc7641>.






Boucadair & Shallow     Expires October 12, 2020                [Page 6]

Internet-Draft       New Block-Wise Transfer Options          April 2020


   [RFC7959]  Bormann, C. and Z. Shelby, Ed., "Block-Wise Transfers in
              the Constrained Application Protocol (CoAP)", RFC 7959,
              DOI 10.17487/RFC7959, August 2016,
              <https://www.rfc-editor.org/info/rfc7959>.

   [RFC8075]  Castellani, A., Loreto, S., Rahman, A., Fossati, T., and
              E. Dijk, "Guidelines for Mapping Implementations: HTTP to
              the Constrained Application Protocol (CoAP)", RFC 8075,
              DOI 10.17487/RFC8075, February 2017,
              <https://www.rfc-editor.org/info/rfc8075>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

10.2.  Informative References

   [I-D.ietf-dots-telemetry]
              Boucadair, M., Reddy.K, T., Doron, E., and c. chenmeiling,
              "Distributed Denial-of-Service Open Threat Signaling
              (DOTS) Telemetry", draft-ietf-dots-telemetry-06 (work in
              progress), April 2020.

   [RFC8586]  Ludin, S., Nottingham, M., and N. Sullivan, "Loop
              Detection in Content Delivery Networks (CDNs)", RFC 8586,
              DOI 10.17487/RFC8586, April 2019,
              <https://www.rfc-editor.org/info/rfc8586>.

Authors' Addresses

   Mohamed Boucadair
   Orange
   Rennes  35000
   France

   Email: mohamed.boucadair@orange.com


   Jon Shallow
   United Kingdom

   Email: supjps-ietf@jpshallow.com









Boucadair & Shallow     Expires October 12, 2020                [Page 7]
